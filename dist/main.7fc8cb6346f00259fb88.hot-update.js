webpackHotUpdate("main",{

/***/ "./src/form.ts":
/*!*********************!*\
  !*** ./src/form.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Table = exports.Form = exports.TextareaField = exports.SelectField = exports.InputField = exports.FieldLabel = exports.InputFieldType = void 0;\r\nvar InputFieldType;\r\n(function (InputFieldType) {\r\n    InputFieldType[InputFieldType[\"text\"] = 0] = \"text\";\r\n    InputFieldType[InputFieldType[\"date\"] = 1] = \"date\";\r\n    InputFieldType[InputFieldType[\"email\"] = 2] = \"email\";\r\n    InputFieldType[InputFieldType[\"radio\"] = 3] = \"radio\";\r\n    InputFieldType[InputFieldType[\"checkbox\"] = 4] = \"checkbox\";\r\n})(InputFieldType = exports.InputFieldType || (exports.InputFieldType = {}));\r\nvar FieldLabel = /** @class */ (function () {\r\n    function FieldLabel(htmlFor, label) {\r\n        this.element = document.createElement('label');\r\n        this.element.setAttribute('for', htmlFor);\r\n        var spanEl = document.createElement('span');\r\n        spanEl.textContent = label;\r\n        this.element.appendChild(spanEl);\r\n    }\r\n    FieldLabel.prototype.render = function () {\r\n        return this.element;\r\n    };\r\n    return FieldLabel;\r\n}());\r\nexports.FieldLabel = FieldLabel;\r\nvar InputField = /** @class */ (function () {\r\n    function InputField(name, label, type) {\r\n        this.element =\r\n            document.createElement('input');\r\n        this.name = name;\r\n        this.label = label;\r\n        this.type = type;\r\n        this.element.name = this.name;\r\n        this.element.type = InputFieldType[this.type];\r\n    }\r\n    InputField.prototype.render = function () {\r\n        var el = new FieldLabel(this.name, this.label).render();\r\n        el.appendChild(this.element);\r\n        return el;\r\n    };\r\n    InputField.prototype.getValue = function () {\r\n        if (this.type === InputFieldType.checkbox) {\r\n            return this.element.checked;\r\n        }\r\n        return this.element.value;\r\n    };\r\n    return InputField;\r\n}());\r\nexports.InputField = InputField;\r\nvar SelectField = /** @class */ (function () {\r\n    function SelectField(name, label, options) {\r\n        this.element =\r\n            document.createElement('select');\r\n        this.name = name;\r\n        this.label = label;\r\n        this.options = options;\r\n        this.element.name = this.name;\r\n    }\r\n    SelectField.prototype.render = function () {\r\n        var _this = this;\r\n        this.options.forEach(function (option) {\r\n            var optionEl = document.createElement('option');\r\n            optionEl.text = option.text;\r\n            optionEl.value = option.value;\r\n            _this.element.appendChild(optionEl);\r\n        });\r\n        var el = new FieldLabel(this.name, this.label).render();\r\n        el.appendChild(this.element);\r\n        return el;\r\n    };\r\n    SelectField.prototype.getValue = function () {\r\n        return this.element.value;\r\n    };\r\n    return SelectField;\r\n}());\r\nexports.SelectField = SelectField;\r\nvar TextareaField = /** @class */ (function () {\r\n    function TextareaField(name, label) {\r\n        this.element =\r\n            document.createElement('textarea');\r\n        this.name = name;\r\n        this.label = label;\r\n        this.element.name = this.name;\r\n    }\r\n    TextareaField.prototype.render = function () {\r\n        var el = new FieldLabel(this.name, this.label).render();\r\n        el.appendChild(this.element);\r\n        return el;\r\n    };\r\n    TextareaField.prototype.getValue = function () {\r\n        return this.element.value;\r\n    };\r\n    return TextareaField;\r\n}());\r\nexports.TextareaField = TextareaField;\r\nvar Form = /** @class */ (function () {\r\n    function Form(id) {\r\n        this.fields = [];\r\n        // @ts-ignore\r\n        this.formElement = document.getElementById(id);\r\n        // @ts-ignore\r\n        window.form = this;\r\n    }\r\n    Form.prototype.render = function () {\r\n        var _this = this;\r\n        if (!this.formElement) {\r\n            return;\r\n        }\r\n        this.fields.forEach(function (field) {\r\n            // @ts-ignore\r\n            _this.formElement.appendChild(field.render());\r\n        });\r\n    };\r\n    Form.prototype.getValue = function () {\r\n        var fieldValues = {};\r\n        this.fields.forEach(function (field) {\r\n            // @ts-ignore\r\n            fieldValues[field.name] = field.getValue();\r\n        });\r\n        return fieldValues;\r\n    };\r\n    ;\r\n    Form.prototype.loadValues = function (values) {\r\n        // Object.entries(values).forEach((item)=>{\r\n        //     this.fields[item.name] = item.value;\r\n        // })\r\n    };\r\n    Form.prototype.clear = function () {\r\n        var _a;\r\n        (_a = this.formElement) === null || _a === void 0 ? void 0 : _a.reset();\r\n    };\r\n    return Form;\r\n}());\r\nexports.Form = Form;\r\nvar Table = /** @class */ (function () {\r\n    function Table(id, form, options) {\r\n        this.editItem = null;\r\n        this.formValuesList = [];\r\n        this.container = document.getElementById(id);\r\n        this.form = form;\r\n        // @ts-ignore\r\n        window.table = this;\r\n        var self = this;\r\n        var checkFormEl = document.getElementById(options.formSubmitElId);\r\n        checkFormEl === null || checkFormEl === void 0 ? void 0 : checkFormEl.addEventListener('click', function () {\r\n            self.add(self.form.getValue());\r\n            self.form.clear();\r\n        });\r\n    }\r\n    Table.prototype.render = function () {\r\n        var tabCell;\r\n        if (!this.container) {\r\n            return;\r\n        }\r\n        var i;\r\n        var table = document.createElement('table');\r\n        var col = [];\r\n        for (i = 0; i < this.formValuesList.length; i++) {\r\n            for (var key in this.formValuesList[i]) {\r\n                if (col.indexOf(key) === -1) {\r\n                    col.push(key);\r\n                }\r\n            }\r\n        }\r\n        col.push('Edytuj');\r\n        // CREATE HTML TABLE HEADER ROW USING THE EXTRACTED HEADERS ABOVE.\r\n        var tr = table.insertRow(-1); // TABLE ROW.\r\n        for (i = 0; i < col.length; i++) {\r\n            var th = document.createElement(\"th\"); // TABLE HEADER.\r\n            th.innerHTML = col[i];\r\n            tr.appendChild(th);\r\n        }\r\n        // ADD JSON DATA TO THE TABLE AS ROWS.\r\n        for (i = 0; i < this.formValuesList.length; i++) {\r\n            tr = table.insertRow(-1);\r\n            for (var j = 0; j < col.length - 1; j++) {\r\n                tabCell = tr.insertCell(-1);\r\n                // @ts-ignore\r\n                tabCell.innerHTML = this.formValuesList[i][col[j]];\r\n            }\r\n            tabCell = tr.insertCell(-1);\r\n            var editBtn = document.createElement('button');\r\n            editBtn.innerText = 'Edit';\r\n            editBtn.setAttribute('data-id', String(i));\r\n            editBtn.addEventListener('click', this.edit.bind(this));\r\n            tabCell.innerHTML = '';\r\n            tabCell.appendChild(editBtn);\r\n        }\r\n        this.container.innerHTML = '';\r\n        this.container.appendChild(table);\r\n    };\r\n    Table.prototype.add = function (formValues) {\r\n        this.formValuesList.push(formValues);\r\n        console.log(this.formValuesList);\r\n        this.render();\r\n    };\r\n    // @ts-ignore\r\n    Table.prototype.edit = function (e) {\r\n        // @ts-ignore\r\n        var id = e.target.dataset.id;\r\n        var item = this.formValuesList.find(function (formValue) {\r\n            // @ts-ignore\r\n            console.log(formValue);\r\n            return formValue.id == id;\r\n        });\r\n        // if (!item) {\r\n        //     return;\r\n        // }\r\n        console.log(this);\r\n        console.log(e);\r\n        console.log(id);\r\n        console.log(item);\r\n    };\r\n    return Table;\r\n}());\r\nexports.Table = Table;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/form.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar form_1 = __webpack_require__(/*! ./form */ \"./src/form.ts\");\r\n__webpack_require__(/*! ./styles.scss */ \"./src/styles.scss\");\r\nvar inputName = new form_1.InputField('Imie', 'Imię', form_1.InputFieldType.text);\r\nvar inputSurname = new form_1.InputField('Nazwisko', 'Nazwisko', form_1.InputFieldType.text);\r\nvar inputEmail = new form_1.InputField('Email', 'E-mail', form_1.InputFieldType.email);\r\nvar selectFieldOfStudy = new form_1.SelectField('Kierunek', 'Wybrany kierunek studiów', [\r\n    {\r\n        text: 'Informatyka',\r\n        value: 'IT',\r\n    },\r\n    {\r\n        text: 'Grafika',\r\n        value: 'Graphic'\r\n    }\r\n]);\r\nvar checkboxELearningPrefer = new form_1.InputField('eLearning', 'Czy preferujesz e-learning', form_1.InputFieldType.checkbox);\r\nvar textareaComments = new form_1.TextareaField('Uwagi', 'Uwagi');\r\nvar mainForm = new form_1.Form('mainForm');\r\nmainForm.fields.push(inputName, inputSurname, inputEmail, selectFieldOfStudy, checkboxELearningPrefer, textareaComments);\r\nvar table = new form_1.Table('table', mainForm, {\r\n    formSubmitElId: 'checkForm',\r\n    formResetElId: 'resetForm',\r\n});\r\nmainForm.render();\r\n// const checkFormBtn = document.getElementById('checkForm');\r\n// if (checkFormBtn) {\r\n//     checkFormBtn.addEventListener('click', function () {\r\n//         const values = mainForm.getValue();\r\n//         table.add(values);\r\n//     });\r\n// }\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdFQUEyRjtBQUMzRiw4REFBdUI7QUFFdkIsSUFBTSxTQUFTLEdBQUcsSUFBSSxpQkFBVSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUscUJBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN0RSxJQUFNLFlBQVksR0FBRyxJQUFJLGlCQUFVLENBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxxQkFBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pGLElBQU0sVUFBVSxHQUFHLElBQUksaUJBQVUsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLHFCQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDM0UsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGtCQUFXLENBQUMsVUFBVSxFQUFFLDBCQUEwQixFQUFFO0lBQy9FO1FBQ0ksSUFBSSxFQUFFLGFBQWE7UUFDbkIsS0FBSyxFQUFFLElBQUk7S0FDZDtJQUNEO1FBQ0ksSUFBSSxFQUFFLFNBQVM7UUFDZixLQUFLLEVBQUUsU0FBUztLQUNuQjtDQUNKLENBQUMsQ0FBQztBQUNILElBQU0sdUJBQXVCLEdBQUcsSUFBSSxpQkFBVSxDQUFDLFdBQVcsRUFBRSw0QkFBNEIsRUFBRSxxQkFBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ25ILElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxvQkFBYSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztBQUc3RCxJQUFNLFFBQVEsR0FBRyxJQUFJLFdBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN0QyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSx1QkFBdUIsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3pILElBQU0sS0FBSyxHQUFHLElBQUksWUFBSyxDQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUM7SUFDckMsY0FBYyxFQUFFLFdBQVc7SUFDM0IsYUFBYSxFQUFFLFdBQVc7Q0FDN0IsQ0FBQyxDQUFDO0FBQ0gsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBR2xCLDZEQUE2RDtBQUM3RCxzQkFBc0I7QUFDdEIsMkRBQTJEO0FBQzNELDhDQUE4QztBQUM5Qyw2QkFBNkI7QUFDN0IsVUFBVTtBQUNWLElBQUkiLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Zvcm0sIElucHV0RmllbGQsIElucHV0RmllbGRUeXBlLCBTZWxlY3RGaWVsZCwgVGV4dGFyZWFGaWVsZCwgVGFibGV9IGZyb20gXCIuL2Zvcm1cIjtcbmltcG9ydCAnLi9zdHlsZXMuc2Nzcyc7XG5cbmNvbnN0IGlucHV0TmFtZSA9IG5ldyBJbnB1dEZpZWxkKCdJbWllJywgJ0ltacSZJywgSW5wdXRGaWVsZFR5cGUudGV4dCk7XG5jb25zdCBpbnB1dFN1cm5hbWUgPSBuZXcgSW5wdXRGaWVsZCgnTmF6d2lza28nLCAnTmF6d2lza28nLCBJbnB1dEZpZWxkVHlwZS50ZXh0KTtcbmNvbnN0IGlucHV0RW1haWwgPSBuZXcgSW5wdXRGaWVsZCgnRW1haWwnLCAnRS1tYWlsJywgSW5wdXRGaWVsZFR5cGUuZW1haWwpO1xuY29uc3Qgc2VsZWN0RmllbGRPZlN0dWR5ID0gbmV3IFNlbGVjdEZpZWxkKCdLaWVydW5laycsICdXeWJyYW55IGtpZXJ1bmVrIHN0dWRpw7N3JywgW1xuICAgIHtcbiAgICAgICAgdGV4dDogJ0luZm9ybWF0eWthJyxcbiAgICAgICAgdmFsdWU6ICdJVCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHRleHQ6ICdHcmFmaWthJyxcbiAgICAgICAgdmFsdWU6ICdHcmFwaGljJ1xuICAgIH1cbl0pO1xuY29uc3QgY2hlY2tib3hFTGVhcm5pbmdQcmVmZXIgPSBuZXcgSW5wdXRGaWVsZCgnZUxlYXJuaW5nJywgJ0N6eSBwcmVmZXJ1amVzeiBlLWxlYXJuaW5nJywgSW5wdXRGaWVsZFR5cGUuY2hlY2tib3gpO1xuY29uc3QgdGV4dGFyZWFDb21tZW50cyA9IG5ldyBUZXh0YXJlYUZpZWxkKCdVd2FnaScsICdVd2FnaScpO1xuXG5cbmNvbnN0IG1haW5Gb3JtID0gbmV3IEZvcm0oJ21haW5Gb3JtJyk7XG5tYWluRm9ybS5maWVsZHMucHVzaChpbnB1dE5hbWUsIGlucHV0U3VybmFtZSwgaW5wdXRFbWFpbCwgc2VsZWN0RmllbGRPZlN0dWR5LCBjaGVja2JveEVMZWFybmluZ1ByZWZlciwgdGV4dGFyZWFDb21tZW50cyk7XG5jb25zdCB0YWJsZSA9IG5ldyBUYWJsZSgndGFibGUnLG1haW5Gb3JtLHtcbiAgICBmb3JtU3VibWl0RWxJZDogJ2NoZWNrRm9ybScsXG4gICAgZm9ybVJlc2V0RWxJZDogJ3Jlc2V0Rm9ybScsXG59KTtcbm1haW5Gb3JtLnJlbmRlcigpO1xuXG5cbi8vIGNvbnN0IGNoZWNrRm9ybUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGVja0Zvcm0nKTtcbi8vIGlmIChjaGVja0Zvcm1CdG4pIHtcbi8vICAgICBjaGVja0Zvcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4vLyAgICAgICAgIGNvbnN0IHZhbHVlcyA9IG1haW5Gb3JtLmdldFZhbHVlKCk7XG4vLyAgICAgICAgIHRhYmxlLmFkZCh2YWx1ZXMpO1xuLy8gICAgIH0pO1xuLy8gfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

})